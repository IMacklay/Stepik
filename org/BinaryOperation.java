package org;

/*
 Реализуйте метод flipBit, изменяющий значение одного бита заданного целого числа на противоположное.
 Данная задача актуальна, например, при работе с битовыми полями.

 Договоримся, что биты нумеруются от младшего (индекс 1) к старшему (индекс 32).

 Воспользуйтесь предоставленным шаблоном. Декларацию класса, метод main и обработку ввода-вывода добавит проверяющая система.
 */

public class BinaryOperation {
    public static void main(String[] args) {
        System.out.println(flipBit(13, 3));
    }


    //Используем оператор XOR для числа и номера бита (-1 т.к. нумерация с 0)
    //Номер бита - это 2(двоичная СС) в степени номера бита
    //т.е. накладываем на число побитовую маску для смены знаков битов
    public static int flipBit(int value, int bitIndex) {
        return (value ^ (int) Math.pow(2, bitIndex-1));
    }
    //Вместо возведения в степень можно взять 1 и использовать побитовый сдвиг <<
    // на значение bitIndex-1: value ^ 1 << bitIndex-1
}
